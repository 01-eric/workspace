import java.util.*;

public class PhoneLines {
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int vertices = scanner.nextInt(), edges = scanner.nextInt(), freeCables = scanner.nextInt();
		int[][] adjMatrix = new int[vertices][vertices], binMatrix = new int[vertices][vertices];
		for (int i = 0; i < edges; i++) {
			int vertex1 = scanner.nextInt(), vertex2 = scanner.nextInt(), cost = scanner.nextInt();
			adjMatrix[vertex1][vertex2] = cost;
			adjMatrix[vertex2][vertex1] = cost;
		} scanner.close();
		existsPath(4, freeCables, adjMatrix, binMatrix);
		
	}
	
	// returns true if there is a path between 1 and N with no more than K edges with
	// costs greater than maxWeight
	static boolean existsPath(int maxWeight, int K, int[][] adjMatrix, int[][] binMatrix) {
		for (int i = 0; i < binMatrix.length; i++) {
			for (int j = 0; j < binMatrix.length; j++) {
				binMatrix[i][j] = adjMatrix[i][j] > maxWeight ? 1 : 0;
				System.out.print(binMatrix[i][j]);
			} System.out.println();
		} return false;
	}

}
