import java.util.*;

public class ModernArt {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int n = scanner.nextInt();
		int[][] canvas = new int[n][n];
		TreeMap<Integer, int[]>corners = new TreeMap<Integer, int[]>(); // for each number, min & max x, then m&m y
		
		for (int i = 0; i < canvas.length; i++) {
			for (int j = 0; j < canvas[0].length; j++) {
				canvas[i][j] = scanner.nextInt();
				if (!corners.containsKey(canvas[i][j])) corners.put(canvas[i][j], new int[] {n, 0, n, 0});
				int[] arr = corners.get(canvas[i][j]);
				arr[0] = Math.min(arr[0], j);
				arr[1] = Math.max(arr[1], j + 1); // should be to immediate right of square
				arr[2] = Math.min(arr[2], i);
				arr[3] = Math.max(arr[3], i + 1);
			}
		}
		
		System.out.println(Arrays.toString(corners.get(7)));
		
	}
	
}

/*
4
2 2 3 0
2 7 3 7
2 7 7 7
0 0 0 0

*/
